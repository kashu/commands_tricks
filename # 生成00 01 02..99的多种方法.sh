问题：linux下生成00 01 02..99的这些数，怎么生成？
注意：所有内容必须横排显示（按理不说也该理解题意的）
说明：本博文是以一个小试题为载体，讲述如下知识点的综合运用

seq tr {} printf xargs awk sed eval echo for循环等数个重要基础命令的实战用法案例
特把这些知识点的案例通过一道小题分享给大家。如果你还有办法欢迎评论发到下面，共同完善本博文。

#解答1：本题的知识点为seq的-s和-w
seq -w -s " " 0 99
00 01 02 03 …… 97 98 99
#老男孩老师点评：seq的-w是补全数字的宽度，不够的前面加0补。-s是指定分隔符，默认是\n。


#解答2：本题的知识点为tr的用法
seq -w 0 99 | tr "\n" " "
01 02 03 …… 97 98 99
#老男孩老师点评：由于seq默认的分隔符是"\n"，因此，在输出后需要把所有行尾的"\n"替换为空格。


#解答3：本题的知识点是大括号序列的用法
echo {00..99}
00 01 02 03 …… 97 98 99
#老版本的bash会得到现在这种结果
echo {00..99}
0 1 2 3 …… 97 98 99
#弥补的三个小办法：
echo 00 01 02 03 04 05 06 07 08 09 {10..99}
00 01 02 03 …… 97 98 99

echo `seq -w 0 10` {11..99}
00 01 02 03 …… 97 98 99

printf "%02d " $(echo {00..99})
00 01 02 03 …… 97 98 99
#老男孩老师点评：有不同的系统及SHELL版本可以补全前10前的0，但是，这里的Centos5.8无法加0。


#解答4：本题的知识点是seq -f的用法
seq  -s " " -f "%02g" 0 99
00 01 02 03 …… 97 98 99


#解答5：本题的知识点是xargs的用法
seq -w 0 99 | xargs -n 100
00 01 02 03 …… 97 98 99

seq -f"%02g" 0 99 | xargs -n 100
00 01 02 03 …… 97 98 99
#老男孩老师点评：xargs有时候是非常有用的命令，要熟练掌握它。


#解答6：本题的知识点是for循环打印的用法
for i in {00..99};do echo -n $i' ';done
00 01 02 03 …… 97 98 99

for i in `seq -w 0 99`;do echo -n $i" ";done
00 01 02 03 …… 97 98 99

for i in `seq 0 99`;do printf "%02d " $i;done
00 01 02 03 …… 97 98 99

for ((i=0;i<100;i++));do printf "%02d " $i;done
00 01 02 03 …… 97 98 99
#老男孩老师点评：数字序列可以使用任意的命令替换得到。


#解答7：本题的知识点是awk的用法
seq 0 99 | awk '{if(NR<10)printf '0' $0" ";else printf $1" "}'
00 01 02 03 …… 97 98 99

seq 0 99 | awk '{if(NR<10)print '0' $0;else print $0}' | xargs -n 100
00 01 02 03 …… 97 98 99
#老男孩老师点评：linux的三剑客之一，awk的威力就不说了。


#解答8：本题的知识点是eval和双大括号组合的用法
eval echo {`seq -s , 0 9`}{`seq -s , 0 9`}
00 01 02 03 …… 97 98 99
提示：以上命令相当于echo {0,1,2,3,4,5,6,7,8,9}{0,1,2,3,4,5,6,7,8,9}


#解答9：本题的知识点是printf的用法
printf "%02d " $(seq 0 99)
00 01 02 03 …… 97 98 99
#这个有点问题
#printf "%02d " $(echo {00..99})
#bash: printf: 08: invalid octal number
#bash: printf: 09: invalid octal number
#00 01 02 03 04 05 …… 96 97 98 99


#解答10：本题的知识点是awk中双重循环的用法
awk 'BEGIN{for(i=0;i<=9;i++) {for(j=0;j<=9;j++)printf i j" " }}'
00 01 02 03 …… 97 98 99


#解答11：本题的知识点是sed用法
seq 0 99 | sed 's/\(^[0-9]\)$/0\1/g' | tr "\n" " "
00 01 02 03 …… 97 98 99
#老男孩老师点评：linux的三剑客之一，sed的威力就不说了。


#解答12:python实现方法（博友的回答）
$ python
Python 2.4.3 (#1, Feb 22 2012, 16:05:45)
[GCC 4.1.2 20080704 (Red Hat 4.1.2-52)] on linux2
>>> print " ".join([ "%02d"%(i) for i in range(100)])
00 01 02 03 04 05 …… 97 98 99


#kashu.org补充：结合paste的用法
seq -w 0 99 | paste -s -d' '
00 01 02 03 …… 97 98 99

本文出自 “老男孩linux运维” 博客，请务必保留此出处http://oldboy.blog.51cto.com/2561410/1216107
